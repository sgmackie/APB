; Listing generated by Microsoft (R) Optimizing Compiler Version 19.11.25507.1 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

_DATA	SEGMENT
$SG6234	DB	'MIDI Note %d has frequency %f', 00H
_DATA	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	main
PUBLIC	__real@3fb5555555555555
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@4008000000000000
PUBLIC	__real@4014000000000000
PUBLIC	__real@406b800000000000
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	pow:PROC
EXTRN	_fltused:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+192
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __real@406b800000000000
CONST	SEGMENT
__real@406b800000000000 DQ 0406b800000000000r	; 220
CONST	ENDS
;	COMDAT __real@4014000000000000
CONST	SEGMENT
__real@4014000000000000 DQ 04014000000000000r	; 5
CONST	ENDS
;	COMDAT __real@4008000000000000
CONST	SEGMENT
__real@4008000000000000 DQ 04008000000000000r	; 3
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fb5555555555555
CONST	SEGMENT
__real@3fb5555555555555 DQ 03fb5555555555555r	; 0.0833333
CONST	ENDS
xdata	SEGMENT
$unwind$main DD	010401H
	DD	0a204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
; File k:\audio\editing\current\programming\the_audio_programming_book\test_code\chapter_1\1.2\code\freq_midi.c
_TEXT	SEGMENT
midinote$ = 32
semitone_ratio$ = 40
c5$ = 48
c0$ = 56
frequency$ = 64
main	PROC

; 6    : {

$LN3:
  00000	48 83 ec 58	 sub	 rsp, 88			; 00000058H

; 7    : 	//declare variables
; 8    : 	
; 9    : 	double semitone_ratio, c0, c5, frequency;
; 10   : 	
; 11   : 	//calculate required numbers
; 12   : 	
; 13   : 	semitone_ratio = pow(2, 1/12.0);

  00004	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@3fb5555555555555
  0000c	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@4000000000000000
  00014	e8 00 00 00 00	 call	 pow
  00019	f2 0f 11 44 24
	28		 movsd	 QWORD PTR semitone_ratio$[rsp], xmm0

; 14   : 	//find middle C
; 15   : 	c5 = 220.0 * pow(semitone_ratio, 3);

  0001f	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4008000000000000
  00027	f2 0f 10 44 24
	28		 movsd	 xmm0, QWORD PTR semitone_ratio$[rsp]
  0002d	e8 00 00 00 00	 call	 pow
  00032	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@406b800000000000
  0003a	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  0003e	0f 28 c1	 movaps	 xmm0, xmm1
  00041	f2 0f 11 44 24
	30		 movsd	 QWORD PTR c5$[rsp], xmm0

; 16   : 	//MIDI note 0 is C, 5 octaves below Middle C
; 17   : 	c0 = c5 * pow(0.5, 5);

  00047	f2 0f 10 0d 00
	00 00 00	 movsd	 xmm1, QWORD PTR __real@4014000000000000
  0004f	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@3fe0000000000000
  00057	e8 00 00 00 00	 call	 pow
  0005c	f2 0f 10 4c 24
	30		 movsd	 xmm1, QWORD PTR c5$[rsp]
  00062	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00066	0f 28 c1	 movaps	 xmm0, xmm1
  00069	f2 0f 11 44 24
	38		 movsd	 QWORD PTR c0$[rsp], xmm0

; 18   : 	
; 19   : 	//calculate frequency for given MIDI number
; 20   : 	int midinote = 73;

  0006f	c7 44 24 20 49
	00 00 00	 mov	 DWORD PTR midinote$[rsp], 73 ; 00000049H

; 21   : 	frequency = c0 * pow(semitone_ratio, midinote);

  00077	f2 0f 2a 44 24
	20		 cvtsi2sd xmm0, DWORD PTR midinote$[rsp]
  0007d	0f 28 c8	 movaps	 xmm1, xmm0
  00080	f2 0f 10 44 24
	28		 movsd	 xmm0, QWORD PTR semitone_ratio$[rsp]
  00086	e8 00 00 00 00	 call	 pow
  0008b	f2 0f 10 4c 24
	38		 movsd	 xmm1, QWORD PTR c0$[rsp]
  00091	f2 0f 59 c8	 mulsd	 xmm1, xmm0
  00095	0f 28 c1	 movaps	 xmm0, xmm1
  00098	f2 0f 11 44 24
	40		 movsd	 QWORD PTR frequency$[rsp], xmm0

; 22   : 	
; 23   : 	printf("MIDI Note %d has frequency %f", midinote, frequency);

  0009e	f2 0f 10 54 24
	40		 movsd	 xmm2, QWORD PTR frequency$[rsp]
  000a4	66 49 0f 7e d0	 movq	 r8, xmm2
  000a9	8b 54 24 20	 mov	 edx, DWORD PTR midinote$[rsp]
  000ad	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:$SG6234
  000b4	e8 00 00 00 00	 call	 printf

; 24   : 	
; 25   : 	
; 26   : 	return 0;

  000b9	33 c0		 xor	 eax, eax

; 27   : 	
; 28   : }

  000bb	48 83 c4 58	 add	 rsp, 88			; 00000058H
  000bf	c3		 ret	 0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\stdio.h
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT

; 952  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000f	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 953  :         int _Result;
; 954  :         va_list _ArgList;
; 955  :         __crt_va_start(_ArgList, _Format);

  00018	48 8d 44 24 48	 lea	 rax, QWORD PTR _Format$[rsp+8]
  0001d	48 89 44 24 28	 mov	 QWORD PTR _ArgList$[rsp], rax

; 956  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

  00022	b9 01 00 00 00	 mov	 ecx, 1
  00027	e8 00 00 00 00	 call	 __acrt_iob_func
  0002c	4c 8b 4c 24 28	 mov	 r9, QWORD PTR _ArgList$[rsp]
  00031	45 33 c0	 xor	 r8d, r8d
  00034	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Format$[rsp]
  00039	48 8b c8	 mov	 rcx, rax
  0003c	e8 00 00 00 00	 call	 _vfprintf_l
  00041	89 44 24 20	 mov	 DWORD PTR _Result$[rsp], eax

; 957  :         __crt_va_end(_ArgList);

  00045	48 c7 44 24 28
	00 00 00 00	 mov	 QWORD PTR _ArgList$[rsp], 0

; 958  :         return _Result;

  0004e	8b 44 24 20	 mov	 eax, DWORD PTR _Result$[rsp]

; 959  :     }

  00052	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00056	c3		 ret	 0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\stdio.h
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT

; 640  :     {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	48 83 ec 38	 sub	 rsp, 56			; 00000038H

; 641  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

  00018	e8 00 00 00 00	 call	 __local_stdio_printf_options
  0001d	48 8b 4c 24 58	 mov	 rcx, QWORD PTR _ArgList$[rsp]
  00022	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00027	4c 8b 4c 24 50	 mov	 r9, QWORD PTR _Locale$[rsp]
  0002c	4c 8b 44 24 48	 mov	 r8, QWORD PTR _Format$[rsp]
  00031	48 8b 54 24 40	 mov	 rdx, QWORD PTR _Stream$[rsp]
  00036	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00039	e8 00 00 00 00	 call	 __stdio_common_vfprintf

; 642  :     }

  0003e	48 83 c4 38	 add	 rsp, 56			; 00000038H
  00042	c3		 ret	 0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\windows kits\10\include\10.0.15063.0\ucrt\corecrt_stdio_config.h
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

  00000	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

  00007	c3		 ret	 0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
